{"version":3,"file":"withSentryConfig.js","sources":["../../../src/config/withSentryConfig.ts"],"sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable complexity */\nimport { isThenable, parseSemver } from '@sentry/core';\nimport { getSentryRelease } from '@sentry/node';\nimport * as childProcess from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { handleRunAfterProductionCompile } from './handleRunAfterProductionCompile';\nimport { createRouteManifest } from './manifest/createRouteManifest';\nimport type { RouteManifest } from './manifest/types';\nimport { constructTurbopackConfig } from './turbopack';\nimport type {\n  ExportedNextConfig as NextConfig,\n  NextConfigFunction,\n  NextConfigObject,\n  SentryBuildOptions,\n  TurbopackOptions,\n} from './types';\nimport { detectActiveBundler, getNextjsVersion, supportsProductionCompileHook } from './util';\nimport { constructWebpackConfigFunction } from './webpack';\n\nlet showedExportModeTunnelWarning = false;\nlet showedExperimentalBuildModeWarning = false;\n\n// Packages we auto-instrument need to be external for instrumentation to work\n// Next.js externalizes some packages by default, see: https://nextjs.org/docs/app/api-reference/config/next-config-js/serverExternalPackages\n// Others we need to add ourselves\n//\n// NOTE: 'ai' (Vercel AI SDK) is intentionally NOT included in this list.\n// When externalized, Next.js doesn't properly handle the package's conditional exports,\n// specifically the \"react-server\" export condition. This causes client-side code to be\n// loaded in server components instead of the appropriate server-side functions.\nexport const DEFAULT_SERVER_EXTERNAL_PACKAGES = [\n  'amqplib',\n  'connect',\n  'dataloader',\n  'express',\n  'generic-pool',\n  'graphql',\n  '@hapi/hapi',\n  'ioredis',\n  'kafkajs',\n  'koa',\n  'lru-memoizer',\n  'mongodb',\n  'mongoose',\n  'mysql',\n  'mysql2',\n  'knex',\n  'pg',\n  'pg-pool',\n  '@node-redis/client',\n  '@redis/client',\n  'redis',\n  'tedious',\n];\n\n/**\n * Modifies the passed in Next.js configuration with automatic build-time instrumentation and source map upload.\n *\n * @param nextConfig A Next.js configuration object, as usually exported in `next.config.js` or `next.config.mjs`.\n * @param sentryBuildOptions Additional options to configure instrumentation and\n * @returns The modified config to be exported\n */\nexport function withSentryConfig<C>(nextConfig?: C, sentryBuildOptions: SentryBuildOptions = {}): C {\n  const castNextConfig = (nextConfig as NextConfig) || {};\n  if (typeof castNextConfig === 'function') {\n    return function (this: unknown, ...webpackConfigFunctionArgs: unknown[]): ReturnType<NextConfigFunction> {\n      const maybePromiseNextConfig: ReturnType<typeof castNextConfig> = castNextConfig.apply(\n        this,\n        webpackConfigFunctionArgs,\n      );\n\n      if (isThenable(maybePromiseNextConfig)) {\n        return maybePromiseNextConfig.then(promiseResultNextConfig => {\n          return getFinalConfigObject(promiseResultNextConfig, sentryBuildOptions);\n        });\n      }\n\n      return getFinalConfigObject(maybePromiseNextConfig, sentryBuildOptions);\n    } as C;\n  } else {\n    return getFinalConfigObject(castNextConfig, sentryBuildOptions) as C;\n  }\n}\n\n/**\n * Generates a random tunnel route path that's less likely to be blocked by ad-blockers\n */\nfunction generateRandomTunnelRoute(): string {\n  // Generate a random 8-character alphanumeric string\n  const randomString = Math.random().toString(36).substring(2, 10);\n  return `/${randomString}`;\n}\n\n// Modify the materialized object form of the user's next config by deleting the `sentry` property and wrapping the\n// `webpack` property\nfunction getFinalConfigObject(\n  incomingUserNextConfigObject: NextConfigObject,\n  userSentryOptions: SentryBuildOptions,\n): NextConfigObject {\n  // Only determine a release name if release creation is not explicitly disabled\n  // This prevents injection of Git commit hashes that break build determinism\n  const shouldCreateRelease = userSentryOptions.release?.create !== false;\n  const releaseName = shouldCreateRelease\n    ? (userSentryOptions.release?.name ?? getSentryRelease() ?? getGitRevision())\n    : userSentryOptions.release?.name;\n\n  if (userSentryOptions?.tunnelRoute) {\n    if (incomingUserNextConfigObject.output === 'export') {\n      if (!showedExportModeTunnelWarning) {\n        showedExportModeTunnelWarning = true;\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sentry/nextjs] The Sentry Next.js SDK `tunnelRoute` option will not work in combination with Next.js static exports. The `tunnelRoute` option uses server-side features that cannot be accessed in export mode. If you still want to tunnel Sentry events, set up your own tunnel: https://docs.sentry.io/platforms/javascript/troubleshooting/#using-the-tunnel-option',\n        );\n      }\n    } else {\n      const resolvedTunnelRoute =\n        userSentryOptions.tunnelRoute === true ? generateRandomTunnelRoute() : userSentryOptions.tunnelRoute;\n\n      // Update the global options object to use the resolved value everywhere\n      userSentryOptions.tunnelRoute = resolvedTunnelRoute || undefined;\n      setUpTunnelRewriteRules(incomingUserNextConfigObject, resolvedTunnelRoute);\n    }\n  }\n\n  if (process.argv.includes('--experimental-build-mode')) {\n    if (!showedExperimentalBuildModeWarning) {\n      showedExperimentalBuildModeWarning = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/nextjs] The Sentry Next.js SDK does not currently fully support next build --experimental-build-mode',\n      );\n    }\n    if (process.argv.includes('generate')) {\n      // Next.js v15.3.0-canary.1 splits the experimental build into two phases:\n      // 1. compile: Code compilation\n      // 2. generate: Environment variable inlining and prerendering (We don't instrument this phase, we inline in the compile phase)\n      //\n      // We assume a single \"full\" build and reruns Webpack instrumentation in both phases.\n      // During the generate step it collides with Next.js's inliner\n      // producing malformed JS and build failures.\n      // We skip Sentry processing during generate to avoid this issue.\n      return incomingUserNextConfigObject;\n    }\n  }\n\n  let routeManifest: RouteManifest | undefined;\n  if (!userSentryOptions.disableManifestInjection) {\n    routeManifest = createRouteManifest({\n      basePath: incomingUserNextConfigObject.basePath,\n    });\n  }\n\n  setUpBuildTimeVariables(incomingUserNextConfigObject, userSentryOptions, releaseName);\n\n  const nextJsVersion = getNextjsVersion();\n\n  // Add the `clientTraceMetadata` experimental option based on Next.js version. The option got introduced in Next.js version 15.0.0 (actually 14.3.0-canary.64).\n  // Adding the option on lower versions will cause Next.js to print nasty warnings we wouldn't confront our users with.\n  if (nextJsVersion) {\n    const { major, minor } = parseSemver(nextJsVersion);\n    if (major !== undefined && minor !== undefined && (major >= 15 || (major === 14 && minor >= 3))) {\n      incomingUserNextConfigObject.experimental = incomingUserNextConfigObject.experimental || {};\n      incomingUserNextConfigObject.experimental.clientTraceMetadata = [\n        'baggage',\n        'sentry-trace',\n        ...(incomingUserNextConfigObject.experimental?.clientTraceMetadata || []),\n      ];\n    }\n  } else {\n    // eslint-disable-next-line no-console\n    console.log(\n      \"[@sentry/nextjs] The Sentry SDK was not able to determine your Next.js version. If you are using Next.js version 15 or greater, please add `experimental.clientTraceMetadata: ['sentry-trace', 'baggage']` to your Next.js config to enable pageload tracing for App Router.\",\n    );\n  }\n\n  // From Next.js version (15.0.0-canary.124) onwards, Next.js does no longer require the `experimental.instrumentationHook` option and will\n  // print a warning when it is set, so we need to conditionally provide it for lower versions.\n  if (nextJsVersion) {\n    const { major, minor, patch, prerelease } = parseSemver(nextJsVersion);\n    const isFullySupportedRelease =\n      major !== undefined &&\n      minor !== undefined &&\n      patch !== undefined &&\n      major >= 15 &&\n      ((minor === 0 && patch === 0 && prerelease === undefined) || minor > 0 || patch > 0);\n    const isSupportedV15Rc =\n      major !== undefined &&\n      minor !== undefined &&\n      patch !== undefined &&\n      prerelease !== undefined &&\n      major === 15 &&\n      minor === 0 &&\n      patch === 0 &&\n      prerelease.startsWith('rc.') &&\n      parseInt(prerelease.split('.')[1] || '', 10) > 0;\n    const isSupportedCanary =\n      minor !== undefined &&\n      patch !== undefined &&\n      prerelease !== undefined &&\n      major === 15 &&\n      minor === 0 &&\n      patch === 0 &&\n      prerelease.startsWith('canary.') &&\n      parseInt(prerelease.split('.')[1] || '', 10) >= 124;\n\n    if (!isFullySupportedRelease && !isSupportedV15Rc && !isSupportedCanary) {\n      if (incomingUserNextConfigObject.experimental?.instrumentationHook === false) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sentry/nextjs] You turned off the `experimental.instrumentationHook` option. Note that Sentry will not be initialized if you did not set it up inside `instrumentation.(js|ts)`.',\n        );\n      }\n      incomingUserNextConfigObject.experimental = {\n        instrumentationHook: true,\n        ...incomingUserNextConfigObject.experimental,\n      };\n    }\n  } else {\n    // If we cannot detect a Next.js version for whatever reason, the sensible default is to set the `experimental.instrumentationHook`, even though it may create a warning.\n    if (\n      incomingUserNextConfigObject.experimental &&\n      'instrumentationHook' in incomingUserNextConfigObject.experimental\n    ) {\n      if (incomingUserNextConfigObject.experimental.instrumentationHook === false) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sentry/nextjs] You set `experimental.instrumentationHook` to `false`. If you are using Next.js version 15 or greater, you can remove that option. If you are using Next.js version 14 or lower, you need to set `experimental.instrumentationHook` in your `next.config.(js|mjs)` to `true` for the SDK to be properly initialized in combination with `instrumentation.(js|ts)`.',\n        );\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"[@sentry/nextjs] The Sentry SDK was not able to determine your Next.js version. If you are using Next.js version 15 or greater, Next.js will probably show you a warning about the `experimental.instrumentationHook` being set. To silence Next.js' warning, explicitly set the `experimental.instrumentationHook` option in your `next.config.(js|mjs|ts)` to `undefined`. If you are on Next.js version 14 or lower, you can silence this particular warning by explicitly setting the `experimental.instrumentationHook` option in your `next.config.(js|mjs)` to `true`.\",\n      );\n      incomingUserNextConfigObject.experimental = {\n        instrumentationHook: true,\n        ...incomingUserNextConfigObject.experimental,\n      };\n    }\n  }\n\n  // We wanna check whether the user added a `onRouterTransitionStart` handler to their client instrumentation file.\n  const instrumentationClientFileContents = getInstrumentationClientFileContents();\n  if (\n    instrumentationClientFileContents !== undefined &&\n    !instrumentationClientFileContents.includes('onRouterTransitionStart') &&\n    !userSentryOptions.suppressOnRouterTransitionStartWarning\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[@sentry/nextjs] ACTION REQUIRED: To instrument navigations, the Sentry SDK requires you to export an `onRouterTransitionStart` hook from your `instrumentation-client.(js|ts)` file. You can do so by adding `export const onRouterTransitionStart = Sentry.captureRouterTransitionStart;` to the file.',\n    );\n  }\n\n  let nextMajor: number | undefined;\n  if (nextJsVersion) {\n    const { major } = parseSemver(nextJsVersion);\n    nextMajor = major;\n  }\n\n  const activeBundler = detectActiveBundler(nextJsVersion);\n  const isTurbopack = activeBundler === 'turbopack';\n  const isWebpack = activeBundler === 'webpack';\n  const isTurbopackSupported = supportsProductionCompileHook(nextJsVersion ?? '');\n\n  // Warn if using turbopack with an unsupported Next.js version\n  if (!isTurbopackSupported && isTurbopack) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `[@sentry/nextjs] WARNING: You are using the Sentry SDK with Turbopack. The Sentry SDK is compatible with Turbopack on Next.js version 15.4.1 or later. You are currently on ${nextJsVersion}. Please upgrade to a newer Next.js version to use the Sentry SDK with Turbopack.`,\n    );\n  }\n\n  // Webpack case - warn if trying to use runAfterProductionCompile hook with unsupported Next.js version\n  if (\n    userSentryOptions.useRunAfterProductionCompileHook &&\n    !supportsProductionCompileHook(nextJsVersion ?? '') &&\n    isWebpack\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[@sentry/nextjs] The configured `useRunAfterProductionCompileHook` option is not compatible with your current Next.js version. This option is only supported on Next.js version 15.4.1 or later. Will not run source map and release management logic.',\n    );\n  }\n\n  let turboPackConfig: TurbopackOptions | undefined;\n\n  if (isTurbopack) {\n    turboPackConfig = constructTurbopackConfig({\n      userNextConfig: incomingUserNextConfigObject,\n      userSentryOptions,\n      routeManifest,\n      nextJsVersion,\n    });\n  }\n\n  // If not explicitly set, turbopack uses the runAfterProductionCompile hook (as there are no alternatives), webpack does not.\n  const shouldUseRunAfterProductionCompileHook =\n    userSentryOptions?.useRunAfterProductionCompileHook ?? (isTurbopack ? true : false);\n\n  if (shouldUseRunAfterProductionCompileHook && supportsProductionCompileHook(nextJsVersion ?? '')) {\n    if (incomingUserNextConfigObject?.compiler?.runAfterProductionCompile === undefined) {\n      incomingUserNextConfigObject.compiler ??= {};\n\n      incomingUserNextConfigObject.compiler.runAfterProductionCompile = async ({ distDir }) => {\n        await handleRunAfterProductionCompile(\n          {\n            releaseName,\n            distDir,\n            buildTool: isTurbopack ? 'turbopack' : 'webpack',\n            usesNativeDebugIds: isTurbopack ? turboPackConfig?.debugIds : undefined,\n          },\n          userSentryOptions,\n        );\n      };\n    } else if (typeof incomingUserNextConfigObject.compiler.runAfterProductionCompile === 'function') {\n      incomingUserNextConfigObject.compiler.runAfterProductionCompile = new Proxy(\n        incomingUserNextConfigObject.compiler.runAfterProductionCompile,\n        {\n          async apply(target, thisArg, argArray) {\n            const { distDir }: { distDir: string } = argArray[0] ?? { distDir: '.next' };\n            await target.apply(thisArg, argArray);\n            await handleRunAfterProductionCompile(\n              {\n                releaseName,\n                distDir,\n                buildTool: isTurbopack ? 'turbopack' : 'webpack',\n                usesNativeDebugIds: isTurbopack ? turboPackConfig?.debugIds : undefined,\n              },\n              userSentryOptions,\n            );\n          },\n        },\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/nextjs] The configured `compiler.runAfterProductionCompile` option is not a function. Will not run source map and release management logic.',\n      );\n    }\n  }\n\n  // Enable source maps for turbopack builds\n  if (isTurbopackSupported && isTurbopack && !userSentryOptions.sourcemaps?.disable) {\n    // Only set if not already configured by user\n    if (incomingUserNextConfigObject.productionBrowserSourceMaps === undefined) {\n      if (userSentryOptions.debug) {\n        // eslint-disable-next-line no-console\n        console.log('[@sentry/nextjs] Automatically enabling browser source map generation for turbopack build.');\n      }\n      incomingUserNextConfigObject.productionBrowserSourceMaps = true;\n\n      // Enable source map deletion if not explicitly disabled\n      if (userSentryOptions.sourcemaps?.deleteSourcemapsAfterUpload === undefined) {\n        if (userSentryOptions.debug) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            '[@sentry/nextjs] Source maps will be automatically deleted after being uploaded to Sentry. If you want to keep the source maps, set the `sourcemaps.deleteSourcemapsAfterUpload` option to false in `withSentryConfig()`. If you do not want to generate and upload sourcemaps at all, set the `sourcemaps.disable` option to true.',\n          );\n        }\n\n        userSentryOptions.sourcemaps = {\n          ...userSentryOptions.sourcemaps,\n          deleteSourcemapsAfterUpload: true,\n        };\n      }\n    }\n  }\n\n  return {\n    ...incomingUserNextConfigObject,\n    ...(nextMajor && nextMajor >= 15\n      ? {\n          serverExternalPackages: [\n            ...(incomingUserNextConfigObject.serverExternalPackages || []),\n            ...DEFAULT_SERVER_EXTERNAL_PACKAGES,\n          ],\n        }\n      : {\n          experimental: {\n            ...incomingUserNextConfigObject.experimental,\n            serverComponentsExternalPackages: [\n              ...(incomingUserNextConfigObject.experimental?.serverComponentsExternalPackages || []),\n              ...DEFAULT_SERVER_EXTERNAL_PACKAGES,\n            ],\n          },\n        }),\n    ...(isWebpack && !userSentryOptions.disableSentryWebpackConfig\n      ? {\n          webpack: constructWebpackConfigFunction({\n            userNextConfig: incomingUserNextConfigObject,\n            userSentryOptions,\n            releaseName,\n            routeManifest,\n            nextJsVersion,\n            useRunAfterProductionCompileHook: shouldUseRunAfterProductionCompileHook,\n          }),\n        }\n      : {}),\n    ...(isTurbopackSupported && isTurbopack\n      ? {\n          turbopack: turboPackConfig,\n        }\n      : {}),\n  };\n}\n\n/**\n * Injects rewrite rules into the Next.js config provided by the user to tunnel\n * requests from the `tunnelPath` to Sentry.\n *\n * See https://nextjs.org/docs/api-reference/next.config.js/rewrites.\n */\nfunction setUpTunnelRewriteRules(userNextConfig: NextConfigObject, tunnelPath: string): void {\n  const originalRewrites = userNextConfig.rewrites;\n\n  // This function doesn't take any arguments at the time of writing but we future-proof\n  // here in case Next.js ever decides to pass some\n  userNextConfig.rewrites = async (...args: unknown[]) => {\n    const tunnelRouteRewrite = {\n      // Matched rewrite routes will look like the following: `[tunnelPath]?o=[orgid]&p=[projectid]`\n      // Nextjs will automatically convert `source` into a regex for us\n      source: `${tunnelPath}(/?)`,\n      has: [\n        {\n          type: 'query',\n          key: 'o', // short for orgId - we keep it short so matching is harder for ad-blockers\n          value: '(?<orgid>\\\\d*)',\n        },\n        {\n          type: 'query',\n          key: 'p', // short for projectId - we keep it short so matching is harder for ad-blockers\n          value: '(?<projectid>\\\\d*)',\n        },\n      ],\n      destination: 'https://o:orgid.ingest.sentry.io/api/:projectid/envelope/?hsts=0',\n    };\n\n    const tunnelRouteRewriteWithRegion = {\n      // Matched rewrite routes will look like the following: `[tunnelPath]?o=[orgid]&p=[projectid]?r=[region]`\n      // Nextjs will automatically convert `source` into a regex for us\n      source: `${tunnelPath}(/?)`,\n      has: [\n        {\n          type: 'query',\n          key: 'o', // short for orgId - we keep it short so matching is harder for ad-blockers\n          value: '(?<orgid>\\\\d*)',\n        },\n        {\n          type: 'query',\n          key: 'p', // short for projectId - we keep it short so matching is harder for ad-blockers\n          value: '(?<projectid>\\\\d*)',\n        },\n        {\n          type: 'query',\n          key: 'r', // short for region - we keep it short so matching is harder for ad-blockers\n          value: '(?<region>[a-z]{2})',\n        },\n      ],\n      destination: 'https://o:orgid.ingest.:region.sentry.io/api/:projectid/envelope/?hsts=0',\n    };\n\n    // Order of these is important, they get applied first to last.\n    const newRewrites = [tunnelRouteRewriteWithRegion, tunnelRouteRewrite];\n\n    if (typeof originalRewrites !== 'function') {\n      return newRewrites;\n    }\n\n    // @ts-expect-error Expected 0 arguments but got 1 - this is from the future-proofing mentioned above, so we don't care about it\n    const originalRewritesResult = await originalRewrites(...args);\n\n    if (Array.isArray(originalRewritesResult)) {\n      return [...newRewrites, ...originalRewritesResult];\n    } else {\n      return {\n        ...originalRewritesResult,\n        beforeFiles: [...newRewrites, ...(originalRewritesResult.beforeFiles || [])],\n      };\n    }\n  };\n}\n\nfunction setUpBuildTimeVariables(\n  userNextConfig: NextConfigObject,\n  userSentryOptions: SentryBuildOptions,\n  releaseName: string | undefined,\n): void {\n  const assetPrefix = userNextConfig.assetPrefix || userNextConfig.basePath || '';\n  const basePath = userNextConfig.basePath ?? '';\n\n  const rewritesTunnelPath =\n    userSentryOptions.tunnelRoute !== undefined &&\n    userNextConfig.output !== 'export' &&\n    typeof userSentryOptions.tunnelRoute === 'string'\n      ? `${basePath}${userSentryOptions.tunnelRoute}`\n      : undefined;\n\n  const buildTimeVariables: Record<string, string> = {\n    // Make sure that if we have a windows path, the backslashes are interpreted as such (rather than as escape\n    // characters)\n    _sentryRewriteFramesDistDir: userNextConfig.distDir?.replace(/\\\\/g, '\\\\\\\\') || '.next',\n    // Get the path part of `assetPrefix`, minus any trailing slash. (We use a placeholder for the origin if\n    // `assetPrefix` doesn't include one. Since we only care about the path, it doesn't matter what it is.)\n    _sentryRewriteFramesAssetPrefixPath: assetPrefix\n      ? new URL(assetPrefix, 'http://dogs.are.great').pathname.replace(/\\/$/, '')\n      : '',\n  };\n\n  if (userNextConfig.assetPrefix) {\n    buildTimeVariables._assetsPrefix = userNextConfig.assetPrefix;\n  }\n\n  if (userSentryOptions._experimental?.thirdPartyOriginStackFrames) {\n    buildTimeVariables._experimentalThirdPartyOriginStackFrames = 'true';\n  }\n\n  if (rewritesTunnelPath) {\n    buildTimeVariables._sentryRewritesTunnelPath = rewritesTunnelPath;\n  }\n\n  if (basePath) {\n    buildTimeVariables._sentryBasePath = basePath;\n  }\n\n  if (userNextConfig.assetPrefix) {\n    buildTimeVariables._sentryAssetPrefix = userNextConfig.assetPrefix;\n  }\n\n  if (userSentryOptions._experimental?.thirdPartyOriginStackFrames) {\n    buildTimeVariables._experimentalThirdPartyOriginStackFrames = 'true';\n  }\n\n  if (releaseName) {\n    buildTimeVariables._sentryRelease = releaseName;\n  }\n\n  if (typeof userNextConfig.env === 'object') {\n    userNextConfig.env = { ...buildTimeVariables, ...userNextConfig.env };\n  } else if (userNextConfig.env === undefined) {\n    userNextConfig.env = buildTimeVariables;\n  }\n}\n\nfunction getGitRevision(): string | undefined {\n  let gitRevision: string | undefined;\n  try {\n    gitRevision = childProcess\n      .execSync('git rev-parse HEAD', { stdio: ['ignore', 'pipe', 'ignore'] })\n      .toString()\n      .trim();\n  } catch {\n    // noop\n  }\n  return gitRevision;\n}\n\nfunction getInstrumentationClientFileContents(): string | void {\n  const potentialInstrumentationClientFileLocations = [\n    ['src', 'instrumentation-client.ts'],\n    ['src', 'instrumentation-client.js'],\n    ['instrumentation-client.ts'],\n    ['instrumentation-client.js'],\n  ];\n\n  for (const pathSegments of potentialInstrumentationClientFileLocations) {\n    try {\n      return fs.readFileSync(path.join(process.cwd(), ...pathSegments), 'utf-8');\n    } catch {\n      // noop\n    }\n  }\n}\n"],"names":["isThenable","getSentryRelease","createRouteManifest","getNextjsVersion","parseSemver","detectActiveBundler","supportsProductionCompileHook","constructTurbopackConfig","handleRunAfterProductionCompile","constructWebpackConfigFunction"],"mappings":"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"}