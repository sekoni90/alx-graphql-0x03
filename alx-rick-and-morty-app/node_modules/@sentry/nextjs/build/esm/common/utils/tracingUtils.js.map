{"version":3,"file":"tracingUtils.js","sources":["../../../../src/common/utils/tracingUtils.ts"],"sourcesContent":["import type { PropagationContext } from '@sentry/core';\nimport { debug, getActiveSpan, getRootSpan, GLOBAL_OBJ, Scope, spanToJSON, startNewTrace } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION } from '../span-attributes-with-logic-attached';\n\nconst commonPropagationContextMap = new WeakMap<object, PropagationContext>();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param propagationContext The propagation context that should be shared between all the resources if no propagation context was registered yet.\n * @returns the shared propagation context.\n */\nexport function commonObjectToPropagationContext(\n  commonObject: unknown,\n  propagationContext: PropagationContext,\n): PropagationContext {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoPropagationContext = commonPropagationContextMap.get(commonObject);\n    if (memoPropagationContext) {\n      return memoPropagationContext;\n    } else {\n      commonPropagationContextMap.set(commonObject, propagationContext);\n      return propagationContext;\n    }\n  } else {\n    return propagationContext;\n  }\n}\n\nconst commonIsolationScopeMap = new WeakMap<object, Scope>();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param isolationScope The isolationScope that should be shared between all the resources if no isolation scope was created yet.\n * @returns the shared isolation scope.\n */\nexport function commonObjectToIsolationScope(commonObject: unknown): Scope {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoIsolationScope = commonIsolationScopeMap.get(commonObject);\n    if (memoIsolationScope) {\n      return memoIsolationScope;\n    } else {\n      const newIsolationScope = new Scope();\n      commonIsolationScopeMap.set(commonObject, newIsolationScope);\n      return newIsolationScope;\n    }\n  } else {\n    return new Scope();\n  }\n}\n\ninterface AsyncLocalStorage<T> {\n  getStore(): T | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  run<R, TArgs extends any[]>(store: T, callback: (...args: TArgs) => R, ...args: TArgs): R;\n}\n\nlet nextjsEscapedAsyncStorage: AsyncLocalStorage<true>;\n\n/**\n * Will mark the execution context of the callback as \"escaped\" from Next.js internal tracing by unsetting the active\n * span and propagation context. When an execution passes through this function multiple times, it is a noop after the\n * first time.\n */\nexport function escapeNextjsTracing<T>(cb: () => T): T {\n  const MaybeGlobalAsyncLocalStorage = (GLOBAL_OBJ as { AsyncLocalStorage?: new () => AsyncLocalStorage<true> })\n    .AsyncLocalStorage;\n\n  if (!MaybeGlobalAsyncLocalStorage) {\n    DEBUG_BUILD &&\n      debug.warn(\n        \"Tried to register AsyncLocalStorage async context strategy in a runtime that doesn't support AsyncLocalStorage.\",\n      );\n    return cb();\n  }\n\n  if (!nextjsEscapedAsyncStorage) {\n    nextjsEscapedAsyncStorage = new MaybeGlobalAsyncLocalStorage();\n  }\n\n  if (nextjsEscapedAsyncStorage.getStore()) {\n    return cb();\n  } else {\n    return startNewTrace(() => {\n      return nextjsEscapedAsyncStorage.run(true, () => {\n        return cb();\n      });\n    });\n  }\n}\n\n/**\n * Ideally this function never lands in the develop branch.\n *\n * Drops the entire span tree this function was called in, if it was a span tree created by Next.js.\n */\nexport function dropNextjsRootContext(): void {\n  const nextJsOwnedSpan = getActiveSpan();\n  if (nextJsOwnedSpan) {\n    const rootSpan = getRootSpan(nextJsOwnedSpan);\n    const rootSpanAttributes = spanToJSON(rootSpan).data;\n    if (rootSpanAttributes?.['next.span_type']) {\n      getRootSpan(nextJsOwnedSpan)?.setAttribute(TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION, true);\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAKA,MAAM,2BAAA,GAA8B,IAAI,OAAO,EAA8B;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,gCAAgC;AAChD,EAAE,YAAY;AACd,EAAE,kBAAkB;AACpB,EAAsB;AACtB,EAAE,IAAI,OAAO,YAAA,KAAiB,QAAA,IAAY,YAAY,EAAE;AACxD,IAAI,MAAM,yBAAyB,2BAA2B,CAAC,GAAG,CAAC,YAAY,CAAC;AAChF,IAAI,IAAI,sBAAsB,EAAE;AAChC,MAAM,OAAO,sBAAsB;AACnC,WAAW;AACX,MAAM,2BAA2B,CAAC,GAAG,CAAC,YAAY,EAAE,kBAAkB,CAAC;AACvE,MAAM,OAAO,kBAAkB;AAC/B;AACA,SAAS;AACT,IAAI,OAAO,kBAAkB;AAC7B;AACA;;AAEA,MAAM,uBAAA,GAA0B,IAAI,OAAO,EAAiB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,4BAA4B,CAAC,YAAY,EAAkB;AAC3E,EAAE,IAAI,OAAO,YAAA,KAAiB,QAAA,IAAY,YAAY,EAAE;AACxD,IAAI,MAAM,qBAAqB,uBAAuB,CAAC,GAAG,CAAC,YAAY,CAAC;AACxE,IAAI,IAAI,kBAAkB,EAAE;AAC5B,MAAM,OAAO,kBAAkB;AAC/B,WAAW;AACX,MAAM,MAAM,iBAAA,GAAoB,IAAI,KAAK,EAAE;AAC3C,MAAM,uBAAuB,CAAC,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC;AAClE,MAAM,OAAO,iBAAiB;AAC9B;AACA,SAAS;AACT,IAAI,OAAO,IAAI,KAAK,EAAE;AACtB;AACA;;AAQA,IAAI,yBAAyB;;AAE7B;AACA;AACA;AACA;AACA;AACO,SAAS,mBAAmB,CAAI,EAAE,EAAc;AACvD,EAAE,MAAM,4BAAA,GAA+B,CAAC,UAAA;AACxC,KAAK,iBAAiB;;AAEtB,EAAE,IAAI,CAAC,4BAA4B,EAAE;AACrC,IAAI,WAAA;AACJ,MAAM,KAAK,CAAC,IAAI;AAChB,QAAQ,iHAAiH;AACzH,OAAO;AACP,IAAI,OAAO,EAAE,EAAE;AACf;;AAEA,EAAE,IAAI,CAAC,yBAAyB,EAAE;AAClC,IAAI,yBAAA,GAA4B,IAAI,4BAA4B,EAAE;AAClE;;AAEA,EAAE,IAAI,yBAAyB,CAAC,QAAQ,EAAE,EAAE;AAC5C,IAAI,OAAO,EAAE,EAAE;AACf,SAAS;AACT,IAAI,OAAO,aAAa,CAAC,MAAM;AAC/B,MAAM,OAAO,yBAAyB,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM;AACvD,QAAQ,OAAO,EAAE,EAAE;AACnB,OAAO,CAAC;AACR,KAAK,CAAC;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,qBAAqB,GAAS;AAC9C,EAAE,MAAM,eAAA,GAAkB,aAAa,EAAE;AACzC,EAAE,IAAI,eAAe,EAAE;AACvB,IAAI,MAAM,QAAA,GAAW,WAAW,CAAC,eAAe,CAAC;AACjD,IAAI,MAAM,qBAAqB,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI;AACxD,IAAI,IAAI,kBAAkB,GAAG,gBAAgB,CAAC,EAAE;AAChD,MAAM,WAAW,CAAC,eAAe,CAAC,EAAE,YAAY,CAAC,wCAAwC,EAAE,IAAI,CAAC;AAChG;AACA;AACA;;;;"}