{"version":3,"file":"generateValueInjectionRules.js","sources":["../../../../src/config/turbopack/generateValueInjectionRules.ts"],"sourcesContent":["import * as path from 'path';\nimport type { RouteManifest } from '../manifest/types';\nimport type { JSONValue, TurbopackMatcherWithRule } from '../types';\n\n/**\n * Generate the value injection rules for client and server in turbopack config.\n */\nexport function generateValueInjectionRules({\n  routeManifest,\n  nextJsVersion,\n}: {\n  routeManifest?: RouteManifest;\n  nextJsVersion?: string;\n}): TurbopackMatcherWithRule[] {\n  const rules: TurbopackMatcherWithRule[] = [];\n  const isomorphicValues: Record<string, JSONValue> = {};\n  let clientValues: Record<string, JSONValue> = {};\n  let serverValues: Record<string, JSONValue> = {};\n\n  if (nextJsVersion) {\n    // This is used to determine version-based dev-symbolication behavior\n    isomorphicValues._sentryNextJsVersion = nextJsVersion;\n  }\n\n  if (routeManifest) {\n    clientValues._sentryRouteManifest = JSON.stringify(routeManifest);\n  }\n\n  if (Object.keys(isomorphicValues).length > 0) {\n    clientValues = { ...clientValues, ...isomorphicValues };\n    serverValues = { ...serverValues, ...isomorphicValues };\n  }\n\n  // Client value injection\n  if (Object.keys(clientValues).length > 0) {\n    rules.push({\n      matcher: '**/instrumentation-client.*',\n      rule: {\n        loaders: [\n          {\n            loader: path.resolve(__dirname, '..', 'loaders', 'valueInjectionLoader.js'),\n            options: {\n              values: clientValues,\n            },\n          },\n        ],\n      },\n    });\n  }\n\n  // Server value injection\n  if (Object.keys(serverValues).length > 0) {\n    rules.push({\n      matcher: '**/instrumentation.*',\n      rule: {\n        loaders: [\n          {\n            loader: path.resolve(__dirname, '..', 'loaders', 'valueInjectionLoader.js'),\n            options: {\n              values: serverValues,\n            },\n          },\n        ],\n      },\n    });\n  }\n\n  return rules;\n}\n"],"names":[],"mappings":";;AAIA;AACA;AACA;AACO,SAAS,2BAA2B,CAAC;AAC5C,EAAE,aAAa;AACf,EAAE,aAAa;AACf;;AAGA,EAA+B;AAC/B,EAAE,MAAM,KAAK,GAA+B,EAAE;AAC9C,EAAE,MAAM,gBAAgB,GAA8B,EAAE;AACxD,EAAE,IAAI,YAAY,GAA8B,EAAE;AAClD,EAAE,IAAI,YAAY,GAA8B,EAAE;;AAElD,EAAE,IAAI,aAAa,EAAE;AACrB;AACA,IAAI,gBAAgB,CAAC,oBAAA,GAAuB,aAAa;AACzD;;AAEA,EAAE,IAAI,aAAa,EAAE;AACrB,IAAI,YAAY,CAAC,oBAAA,GAAuB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACrE;;AAEA,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAA,GAAS,CAAC,EAAE;AAChD,IAAI,YAAA,GAAe,EAAE,GAAG,YAAY,EAAE,GAAG,kBAAkB;AAC3D,IAAI,YAAA,GAAe,EAAE,GAAG,YAAY,EAAE,GAAG,kBAAkB;AAC3D;;AAEA;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAA,GAAS,CAAC,EAAE;AAC5C,IAAI,KAAK,CAAC,IAAI,CAAC;AACf,MAAM,OAAO,EAAE,6BAA6B;AAC5C,MAAM,IAAI,EAAE;AACZ,QAAQ,OAAO,EAAE;AACjB,UAAU;AACV,YAAY,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC;AACvF,YAAY,OAAO,EAAE;AACrB,cAAc,MAAM,EAAE,YAAY;AAClC,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN;;AAEA;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAA,GAAS,CAAC,EAAE;AAC5C,IAAI,KAAK,CAAC,IAAI,CAAC;AACf,MAAM,OAAO,EAAE,sBAAsB;AACrC,MAAM,IAAI,EAAE;AACZ,QAAQ,OAAO,EAAE;AACjB,UAAU;AACV,YAAY,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC;AACvF,YAAY,OAAO,EAAE;AACrB,cAAc,MAAM,EAAE,YAAY;AAClC,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN;;AAEA,EAAE,OAAO,KAAK;AACd;;;;"}